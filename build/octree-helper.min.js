/**
 * octree-helper v0.0.1 build May 28 2017
 * https://github.com/vanruesc/octree-helper
 * Copyright 2017 Raoul van RÃ¼schen, Zlib
 */

!function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b(require("three")):"function"==typeof define&&define.amd?define(["three"],b):a.OCTREEHELPER=b(a.THREE)}(this,function(a){"use strict";var b=function(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")},c=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),d=function(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)},e=function(a,b){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!b||"object"!=typeof b&&"function"!=typeof b?a:b},f=function(f){function i(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;b(this,i);var c=e(this,(i.__proto__||Object.getPrototypeOf(i)).call(this));return c.name="OctreeHelper",c.octree=a,c.update(),c}return d(i,f),c(i,[{key:"createLineSegments",value:function(b){var c=Math.pow(2,16)/8-1,d=new a.Object3D,e=new a.LineBasicMaterial({color:16777215*Math.random()}),f=b.length,i=void 0,j=void 0,k=void 0,l=void 0,m=void 0,n=void 0,o=void 0,p=void 0,q=void 0,r=void 0,s=void 0,t=void 0,u=void 0,v=void 0,w=void 0;for(q=0,j=0,u=Math.ceil(f/c);u>0;--u){for(j+=f<c?f:c,f-=c,i=8*j,k=new Uint16Array(3*i),l=new Float32Array(3*i),s=0,t=0;q<j;++q){for(m=b[q],n=m.min,o=m.max,r=0;r<12;++r)w=h[r],k[t++]=s+w[0],k[t++]=s+w[1];for(r=0;r<8;++r,++s)v=g[r],l[3*s]=0===v[0]?n.x:o.x,l[3*s+1]=0===v[1]?n.y:o.y,l[3*s+2]=0===v[2]?n.z:o.z}p=new a.BufferGeometry,p.setIndex(new a.BufferAttribute(k,1)),p.addAttribute("position",new a.BufferAttribute(l,3)),d.add(new a.LineSegments(p,e))}this.add(d)}},{key:"update",value:function(){var a=null!==this.octree?this.octree.getDepth():-1,b=0;for(this.dispose();b<=a;)this.createLineSegments(this.octree.findOctantsByLevel(b)),++b}},{key:"dispose",value:function(){var a=this.children,b=void 0,c=void 0,d=void 0,e=void 0,f=void 0,g=void 0;for(d=0,f=a.length;d<f;++d){for(b=a[d],c=b.children,e=0,g=c.length;e<g;++e)c[e].geometry.dispose(),c[e].material.dispose();for(;c.length>0;)b.remove(c[0])}for(;a.length>0;)this.remove(a[0])}}]),i}(a.Object3D),g=[new Uint8Array([0,0,0]),new Uint8Array([0,0,1]),new Uint8Array([0,1,0]),new Uint8Array([0,1,1]),new Uint8Array([1,0,0]),new Uint8Array([1,0,1]),new Uint8Array([1,1,0]),new Uint8Array([1,1,1])],h=[new Uint8Array([0,4]),new Uint8Array([1,5]),new Uint8Array([2,6]),new Uint8Array([3,7]),new Uint8Array([0,2]),new Uint8Array([1,3]),new Uint8Array([4,6]),new Uint8Array([5,7]),new Uint8Array([0,1]),new Uint8Array([2,3]),new Uint8Array([4,5]),new Uint8Array([6,7])];return f});