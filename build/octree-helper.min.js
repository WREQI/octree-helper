/**
 * octree-helper v0.8.0 build May 31 2018
 * https://github.com/vanruesc/octree-helper
 * Copyright 2018 Raoul van RÃ¼schen, Zlib
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("three")):"function"==typeof define&&define.amd?define(["three"],t):e.OCTREEHELPER=t(e.THREE)}(this,function(U){"use strict";var t=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),e=function(e){function n(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return t.name="OctreeHelper",t.octree=e,t.update(),t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,U.Group),t(n,[{key:"createLineSegments",value:function(e,t){var n=Math.pow(2,16)/8-1,r=new U.Group,i=new U.LineBasicMaterial({color:16777215*Math.random()}),o=void 0,a=void 0,u=void 0,f=void 0,d=void 0,c=void 0,y=void 0,l=void 0,s=void 0,v=void 0,p=void 0,w=void 0,h=void 0,A=void 0,b=void 0,m=void 0;for(u=v=0,A=Math.ceil(t/n);0<A;--A){for(u+=t<n?t:n,t-=n,a=8*u,f=new Uint16Array(3*a),d=new Float32Array(3*a),h=w=0,o=e.next();!o.done&&v<u;){for(y=(c=o.value).min,l=c.max,p=0;p<12;++p)m=O[p],f[h++]=w+m[0],f[h++]=w+m[1];for(p=0;p<8;++p,++w)b=g[p],d[3*w]=0===b[0]?y.x:l.x,d[3*w+1]=0===b[1]?y.y:l.y,d[3*w+2]=0===b[2]?y.z:l.z;++v<u&&(o=e.next())}(s=new U.BufferGeometry).setIndex(new U.BufferAttribute(f,1)),s.addAttribute("position",new U.BufferAttribute(d,3)),r.add(new U.LineSegments(s,i))}this.add(r)}},{key:"update",value:function(){var e=null!==this.octree?this.octree.getDepth():-1,t=0,n=void 0;for(this.dispose();t<=e;)n=this.octree.findOctantsByLevel(t),this.createLineSegments(n[Symbol.iterator](),"number"==typeof n.size?n.size:n.length),++t}},{key:"dispose",value:function(){var e,t=this.children,n=void 0,r=void 0,i=void 0,o=void 0,a=void 0;for(i=0,e=t.length;i<e;++i){for(o=0,a=(r=(n=t[i]).children).length;o<a;++o)r[o].geometry.dispose(),r[o].material.dispose();for(;0<r.length;)n.remove(r[0])}for(;0<t.length;)this.remove(t[0])}}]),n}(),g=[new Uint8Array([0,0,0]),new Uint8Array([0,0,1]),new Uint8Array([0,1,0]),new Uint8Array([0,1,1]),new Uint8Array([1,0,0]),new Uint8Array([1,0,1]),new Uint8Array([1,1,0]),new Uint8Array([1,1,1])],O=[new Uint8Array([0,4]),new Uint8Array([1,5]),new Uint8Array([2,6]),new Uint8Array([3,7]),new Uint8Array([0,2]),new Uint8Array([1,3]),new Uint8Array([4,6]),new Uint8Array([5,7]),new Uint8Array([0,1]),new Uint8Array([2,3]),new Uint8Array([4,5]),new Uint8Array([6,7])];return e});